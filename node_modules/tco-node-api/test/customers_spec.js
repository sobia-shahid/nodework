var assert = require('assert'),
  tco = require('./spec_helper');


describe('customers', function(){

  describe('create()', function(){
    it('should create a customers', function(done){
      tco.customers.create(exampleCustomer, function (error, data) {
        assert.ok(data.id);
        assert.ok(data.payment_methods[0].id);
        assert.ok(data.email);
        assert.ok(data.phone);
        assert.ok(data.currency);
        assert.ok(data.lang);
        done();
      });
    });
  });

  describe('list()', function() {
     it('should return a list of customers', function(done){
      tco.customers.list(null, function (error, data) {
        assert.ok(data.customers);
        assert.ok(data.customers.length > 0);
        done();
      });
    });
  });

  describe('find()', function(){
    var customer;
    before(function(done){
      tco.customers.create(exampleCustomer, function (error, data) {
        customer = data;
        done();
      });
    });
    it('should return a customer', function(done){
      tco.customers.find(customer.id, function (error, data) {
        assert.ok(data.id);
        assert.ok(data.payment_methods[0].id);
        assert.equal(customer.id, data.id);
        done();
      });
    });
    after(function(done){
      tco.customers.delete(customer.id, function (error, data) {
        done();
      });
    });
  });

  describe('update()', function(){
    var customer;
    before(function(done){
      tco.customers.create(exampleCustomer, function (error, data) {
        customer = data;
        done();
      });
    });
    it('should update a customer', function(done){
      tco.customers.update(customer.id, {email: "test@2co.com"},function (error, data) {
        assert.ok(data.id);
        assert.equal("test@2co.com",data.email);
        done();
      });
    });
    after(function(done){
      tco.customers.delete(customer.id, function (error, data) {
        done();
      });
    });
  });

  describe('delete()', function(){
    var customer;
    before(function(done){
      tco.customers.create(exampleCustomer, function (error, data) {
        customer = data;
        done();
      });
    });
    it('should delete a customer', function(done){
      tco.customers.delete(customer.id,function (error, data) {
        assert.equal("Customer " + customer.id + " removed successfully.",data.message);
        assert.equal(null,data.id);
        done();
      });
    });
  });
});
